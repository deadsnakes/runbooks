on:
  workflow_call:
    inputs:
      dists-json:
        required: true
        type: string

jobs:
  update:
    runs-on: ubuntu-latest
    outputs:
      rev: ${{ steps.push.outputs.rev }}
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Brian Finn (Spire Global)'
        git config --global user.email 'brian.finn@spire.com'
        echo 'DEBFULLNAME=Brian Finn (Spire Global)' >> $GITHUB_ENV
        echo 'DEBEMAIL=brian.finn@spire.com' >> $GITHUB_ENV
    - name: clone target
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GH_TOKEN }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: spire-brian-finn/runbooks
    - name: pull upstream cpython
      run: runbooks/meta-gbp update --no-interactive
    - name: push changes
      id: push
      run: |
        if [ "$(git rev-list HEAD --count)" -eq 2 ]; then
            git push origin HEAD
            echo "rev=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"
        fi
  build:
    needs: update
    if: needs.update.outputs.rev
    runs-on: ubuntu-latest
    strategy:
      matrix:
        name: ${{ fromJSON(inputs.dists-json) }}
    steps:
    - name: configure git
      run: |
        git config --global user.name 'Brian Finn (Spire Global)'
        git config --global user.email 'brian.finn@spire.com'
        echo 'DEBFULLNAME=Brian Finn (Spire Global)' >> $GITHUB_ENV
        echo 'DEBEMAIL=brian.finn@spire.com' >> $GITHUB_ENV
    - name: clone target
      uses: actions/checkout@v3
      with:
        ref: ${{ needs.update.outputs.rev }}
    - name: clone runbooks
      uses: actions/checkout@v3
      with:
        path: runbooks
        repository: spire-brian-finn/runbooks
    - name: import gpg key  # TODO need to figure out our key situation
      run: |
        install --directory ~/.gnupg --mode 700
        base64 -d <<< '${{ secrets.GPG_PUBLIC }}' > ~/.gnupg/pubring.gpg
        base64 -d <<< '${{ secrets.GPG_SECRET }}' > ~/.gnupg/secring.gpg
        chmod 600 ~/.gnupg/*
    - name: materialize
      run: runbooks/meta-gbp materialize ${{ matrix.name }}
    - name: build
      run: runbooks/meta-gbp build
    - name: test
      run: runbooks/quick-test --distrib-codename ${{ matrix.name }} --dist-dir dist --src-dir work
    - name: build source package
      run: runbooks/meta-gbp build --source
    - name: upload package
      run: runbooks/meta-gbp upload
