#!/usr/bin/env python3
import argparse
import os.path
import subprocess
import sys
from typing import NoReturn


HERE = os.path.abspath(os.path.dirname(__file__))


def git_config_get(key: str) -> str:
    out = subprocess.check_output(['git', 'config', key], encoding='UTF-8')
    return out.rstrip('\n')


def main() -> NoReturn:
    parser = argparse.ArgumentParser()
    parser.add_argument('--source', action='store_true')
    parser.add_argument('--git-build', action='store_true')
    parser.add_argument(
        '--name', default=git_config_get('user.name'),
        help='Name for commits & signatures (default: %(default)s)',
    )
    parser.add_argument(
        '--email', metavar='ADDRESS', default=git_config_get('user.email'),
        help='Email for commits & signatures (default: %(default)s)',
    )
    parser.add_argument(
        '--gpg-pubring', metavar='PATH', default='.gnupg/pubring.gpg',
        help='GNUPG public keyring, relative to $HOME (default: %(default)s)',
    )
    parser.add_argument(
        '--gpg-secring', metavar='PATH', default='.gnupg/secring.gpg',
        help='GNUPG private keyring, relative to $HOME (default: %(default)s)',
    )
    args = parser.parse_args()

    print('*' * 79)
    print('Parsing target distribution')
    print('*' * 79)
    dist = subprocess.check_output((
        'dpkg-parsechangelog', '--show-field=distribution',
    )).decode().strip()

    tag = f'docker.io/deadsnakes/deadsnakes-{dist}'
    print('*' * 79)
    print(f'Pulling image (tag: {tag})')
    print('*' * 79)
    subprocess.check_call((os.path.join(HERE, 'pull-image'), tag))

    print('*' * 79)
    print('Running build (results will be in ../dist)')
    print('*' * 79)
    os.makedirs('../dist', exist_ok=True)
    pwd = os.getcwd()
    home = os.environ['HOME']
    gbp_args = '' if args.source else '-us -uc'
    gbp_args += (
        '' if not args.git_build else
        ' --git-pristine-tar-commit '
        "--git-upstream-tag='deadsnakes/v%(version%~%_)s'"
    )
    extra = '--git-builder="debuild -S"' if args.source else ''
    prog = (
        f'cp -r /code /tmp && '
        f'cd /tmp/code && '
        f'git config --global user.name "{args.name}" && '
        f'git config --global user.email "{args.email}" && '
        f'apt-get update -qq && '
        f'mk-build-deps --install --remove --tool "apt-get --yes" debian/control && '  # noqa
        f'gbp buildpackage {gbp_args} --git-pristine-tar --git-debian-branch=ubuntu/{dist} {extra} && '  # noqa
        f'find .. -maxdepth 1 -type f | xargs --replace cp {{}} /dist'
    )
    interactive = '-ti' if sys.stdin.isatty() else '-i'
    cmd = (
        'docker', 'run', '--rm', interactive,
        '-v', f'{pwd}:/code:ro',
        '-v', f'{pwd}/../dist:/dist:rw',
        '-v', f'{home}/{args.gpg_pubring}:/root/{args.gpg_pubring}:ro',
        '-v', f'{home}/{args.gpg_secring}:/root/{args.gpg_secring}:ro',
        tag, 'bash', '-euxc', prog,
    )
    os.execvp(cmd[0], cmd)


if __name__ == '__main__':
    raise SystemExit(main())
