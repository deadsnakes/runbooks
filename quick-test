#!/usr/bin/env python3
import argparse
import os.path
from typing import NoReturn

PROG = '''\
inst() {{
    dpkg -i "/dist/$1"_*.deb || true
    apt-get install -qq -yf
    dpkg -l | grep "$1"
}}

. /etc/lsb-release
export DEBIAN_FRONTEND=noninteractive

apt-get update -qq
inst libpython{ver}-minimal
inst libpython{ver}-stdlib
inst libpython{ver}
inst python{ver}-minimal
inst python{ver}

python{ver} -c 'import cmath, ssl'

apt-get install -y --no-install-recommends ca-certificates
if [ \
    "$DISTRIB_CODENAME" = bionic -a {ver} = '3.7' -o \
    "$DISTRIB_CODENAME" = bionic -a {ver} = '3.8' -o \
    "$DISTRIB_CODENAME" = focal -a {ver} = '3.9' -o \
    "$DISTRIB_CODENAME" = jammy -a {ver} = '3.9' -o \
    "$DISTRIB_CODENAME" = jammy -a {ver} = '3.10' \
]; then
    apt-get install -y --no-install-recommends python3-distutils
else
    inst python{ver}-lib2to3
    inst python{ver}-distutils
fi

# distutils.__init__ and distutils.version should be in main lib package
python{ver} -c 'import distutils; assert distutils.__file__'
python{ver} -c 'import distutils.version'

# make sure get-pip.py works
python{ver} -c '
import urllib.request
exec(urllib.request.urlopen("https://bootstrap.pypa.io/get-pip.py").read())
'
test -x /usr/local/bin/pip
python{ver} -m pip --version
/usr/local/bin/pip install astpretty
test -x /usr/local/bin/astpretty

cd /tmp

python{ver} -c '
import shutil
import urllib.request

resp = urllib.request.urlopen("https://bootstrap.pypa.io/virtualenv.pyz")
with open("virtualenv.pyz", "wb") as f:
    shutil.copyfileobj(resp, f)
'
python{ver} virtualenv.pyz venv
test -x venv/bin/pip
test -d venv/lib/python{ver}/site-packages
venv/bin/pip install astpretty
test -x venv/bin/astpretty
'''


def main() -> NoReturn:
    parser = argparse.ArgumentParser()
    parser.add_argument('--distrib-codename', default='bionic')
    parser.add_argument('--dist-dir', default='../dist')
    parser.add_argument('--src-dir', default='.')
    args = parser.parse_args()

    with open(os.path.join(args.src_dir, 'debian/rules')) as f:
        for line in f:
            if line.startswith('VER='):
                _, version = line.strip().split('=')
                break
        else:
            raise AssertionError('could not find version!')

    cmd = (
        'docker', 'run', '--rm',
        '-v', f'{os.path.abspath(args.dist_dir)}:/dist:ro',
        f'ubuntu:{args.distrib_codename}',
        'bash', '-euxc', PROG.format(ver=version),
    )
    os.execvp(cmd[0], cmd)


if __name__ == '__main__':
    raise SystemExit(main())
